// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalProfile.DataAccess;

namespace RPE.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190613150529_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RPE.DataAccess.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Path")
                        .HasMaxLength(500);

                    b.Property<int?>("Purchaseid");

                    b.Property<int?>("Trainingid");

                    b.Property<int?>("Travelid");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Purchaseid");

                    b.HasIndex("Trainingid");

                    b.HasIndex("Travelid");

                    b.ToTable("Attachmentes");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<int?>("Purchaseid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<int?>("Trainingid");

                    b.Property<int?>("Travelid");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Purchaseid");

                    b.HasIndex("Trainingid");

                    b.HasIndex("Travelid");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Can")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<string>("ObjectClass")
                        .HasMaxLength(255);

                    b.Property<int>("Priority");

                    b.Property<string>("PurchaseAmount")
                        .IsRequired();

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("Status")
                        .HasMaxLength(100);

                    b.Property<string>("Vendor")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<int?>("Purchaseid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("Trainingid");

                    b.Property<int?>("Travelid");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Purchaseid");

                    b.HasIndex("Trainingid");

                    b.HasIndex("Travelid");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Training", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate");

                    b.Property<string>("Attendee")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Can")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Hours");

                    b.Property<int>("Priority");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status")
                        .HasMaxLength(100);

                    b.Property<double>("TrainingAmount");

                    b.Property<string>("Vendor")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Travel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate");

                    b.Property<double>("AuthAmount");

                    b.Property<string>("AuthNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Can")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<int>("Priority");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<string>("TravelStatus")
                        .HasMaxLength(100);

                    b.Property<string>("Travelername")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<double>("VoucherAmount");

                    b.Property<DateTime>("VoucherApprovedDate");

                    b.HasKey("id");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Attachment", b =>
                {
                    b.HasOne("RPE.DataAccess.Entities.Purchase")
                        .WithMany("Attachments")
                        .HasForeignKey("Purchaseid");

                    b.HasOne("RPE.DataAccess.Entities.Training")
                        .WithMany("Attachments")
                        .HasForeignKey("Trainingid");

                    b.HasOne("RPE.DataAccess.Entities.Travel")
                        .WithMany("Attachments")
                        .HasForeignKey("Travelid");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Note", b =>
                {
                    b.HasOne("RPE.DataAccess.Entities.Purchase")
                        .WithMany("Notes")
                        .HasForeignKey("Purchaseid");

                    b.HasOne("RPE.DataAccess.Entities.Training")
                        .WithMany("Notes")
                        .HasForeignKey("Trainingid");

                    b.HasOne("RPE.DataAccess.Entities.Travel")
                        .WithMany("Notes")
                        .HasForeignKey("Travelid");
                });

            modelBuilder.Entity("RPE.DataAccess.Entities.Tag", b =>
                {
                    b.HasOne("RPE.DataAccess.Entities.Purchase")
                        .WithMany("Tags")
                        .HasForeignKey("Purchaseid");

                    b.HasOne("RPE.DataAccess.Entities.Training")
                        .WithMany("Tags")
                        .HasForeignKey("Trainingid");

                    b.HasOne("RPE.DataAccess.Entities.Travel")
                        .WithMany("Tags")
                        .HasForeignKey("Travelid");
                });
#pragma warning restore 612, 618
        }
    }
}
